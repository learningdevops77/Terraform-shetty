pipeline {

    parameters {
        choice(
            name: 'terraformAction',
            choices: ['apply', 'destroy'],
            description: 'Choose your Terraform action to perform'
        )
    }

    environment {
        AWS_ACCESS_KEY_ID        = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY    = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any

    stages {

        stage('Checkout') {
            steps {
                script {
                    dir('terraform') {
                        git branch: 'main', url: 'https://github.com/learningdevops77/Terraform-shetty.git'
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                sh '''
                    pwd
                    cd terraform/project-1/
                    terraform init
                    terraform plan -out=tfplan
                    terraform show -no-color tfplan >> tfplan.txt
                '''
            }
        }

        stage('Approval') {
            steps {
                script {
                    // âœ… Corrected file path
                    def plan = readFile 'terraform/project-1/tfplan.txt'
                    input message: "Do you want to proceed with the Terraform action?",
                          //parameters: [text(name: 'plan', description: 'Please review your plan:', defaultValue: plan)]
                }
            }
        }

        stage('Apply or Destroy') {
            when {
                expression {
                    params.terraformAction == 'apply' || params.terraformAction == 'destroy'
                }
            }
            steps {
                script {
                    if (params.terraformAction == 'apply') {
                        sh '''
                            pwd
                            cd terraform/project-1/
                            terraform apply -input=false tfplan
                        '''
                    } else {
                        sh '''
                            pwd
                            cd terraform/project-1/
                            terraform destroy -auto-approve
                        '''
                    }
                }
            }
        }
    }
}
